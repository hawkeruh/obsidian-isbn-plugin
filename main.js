/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var b=Object.defineProperty;var f=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var y=Object.prototype.hasOwnProperty;var S=(o,t)=>{for(var e in t)b(o,e,{get:t[e],enumerable:!0})},$=(o,t,e,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of w(t))!y.call(o,s)&&s!==e&&b(o,s,{get:()=>t[s],enumerable:!(a=f(t,s))||a.enumerable});return o};var k=o=>$(b({},"__esModule",{value:!0}),o);var v={};S(v,{default:()=>p});module.exports=k(v);var l=require("obsidian"),P={template:"${cover}\n## ${title}  \n**Author:** ${author}  \n**Published in:** ${publish_date}  \n**Publisher:** ${publisher}  \n**Pages:** ${pages}  \n**ISBN:** ${isbn}  \n"},p=class extends l.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new d(this.app,this)),this.addCommand({id:"grab-isbn-information",name:"Grab ISBN Information",editorCallback:async t=>{let e=t.getValue(),a=/isbn:(\d{10,13})/gi,s=[...e.matchAll(a)],i=e;for(let h of s){let c=h[0],r=h[1],n=await this.fetchBookInfo(r),u=await this.downloadCoverImage(r);if(n){let g={title:n.title,author:n.author,publish_date:n.publish_date,publisher:n.publisher,pages:n.pages.toString(),isbn:r,cover:u?`![[${u}|150]]`:""},m=this.applyTemplate(this.settings.template,g);i=i.replace(c,m)}}t.setValue(i)}})}applyTemplate(t,e){return t.replace(/\$\{(.*?)\}/g,(a,s)=>{var i;return(i=e[s])!=null?i:""})}async fetchBookInfo(t){var e,a,s,i,h,c;try{let r=await fetch(`https://openlibrary.org/isbn/${t}.json`);if(!r.ok)return null;let n=await r.json(),u="Unknown";if(((e=n.authors)==null?void 0:e.length)>0){let g=await fetch(`https://openlibrary.org${n.authors[0].key}.json`);g.ok&&(u=(await g.json()).name)}return{title:(a=n.title)!=null?a:"Unknown",author:u,publish_date:(s=n.publish_date)!=null?s:"Unknown",publisher:(h=(i=n.publishers)==null?void 0:i[0])!=null?h:"Unknown",pages:(c=n.number_of_pages)!=null?c:0}}catch(r){return console.error("Error fetching book info:",r),null}}async downloadCoverImage(t){try{let e=`https://covers.openlibrary.org/b/isbn/${t}-L.jpg`,a=await fetch(e);if(!a.ok)return null;let s=await a.arrayBuffer(),i=(0,l.normalizePath)(`capa-${t}.jpg`);return await this.app.vault.createBinary(i,s),i}catch(e){return console.error("Error downloading cover:",e),null}}async loadSettings(){this.settings=Object.assign({},P,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},d=class extends l.PluginSettingTab{constructor(t,e){super(t,e),this.plugin=e}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"ISBN Plugin Settings"}),new l.Setting(t).setName("Template").setDesc("Use variables like ${title}, ${author}, ${isbn}, ${cover}, etc.").addTextArea(e=>e.setPlaceholder("Template to format the output").setValue(this.plugin.settings.template).onChange(async a=>{this.plugin.settings.template=a,await this.plugin.saveSettings()}))}};
